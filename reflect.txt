Reflection 
Workshop 5 Reflection
Karoly Nemeth
021949144
IPC144 NDD


1. We use variables and macros instead of hardcoding “magic” numbers in our code for many reasons. Firstly the code becomes more readable to anyone looking at the code which makes it easier to maintain. By using variables and macros we can reuse our code to avoid duplicating lines of code. Lastly it helps with adapting to changes if something needs to change in value depending on the condition.
In this workshop by using variables and macros such as “MIN_YEAR”, “MAX_YEAR”, and “LOG_DAYS” it allows the code to be easily modified if someone wanted to modify it without having to go through each line of the code to make changes, You could simply change the minimum or maximum years at the top of the code, or the logged days.
Variables and macros can also reduce time by being able to do calculations through variables in your line of code and it can be reused in other places with the calculated amount such as finding the sum, average, and total in this workshop. Combining both variables and macros together in this workshop instead of hardcoding “magic” numbers will also reduce possible errors and make the code more maintainable.


2. We do not include additional logic that sums and performs the average because this way we can easily modify our code more efficiently, Be able to reuse the sum and average logic, and allow us to be able to test each part of the code to check for errors while testing each part of our code. 
First reason why this is a better design is because during the calculation portion of this workshop after the ratings are validated I could use the sum and average logic for each valid rating without having to duplicate my lines of code making it reusable and more efficient. Second reason this is a better design is because this way if my code needed to be modified it could easily be done without interfering with my validation portion of the code giving me flexibility and allow me to add to my code in the future if I needed.